//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsAzure.Storage.DataMovement {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsAzure.Storage.DataMovement.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File size {0} is invalid for {1}, must be a multiple of {2}..
        /// </summary>
        internal static string BlobFileSizeInvalidException {
            get {
                return ResourceManager.GetString("BlobFileSizeInvalidException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File size {0} is larger than {1} maximum size {2} bytes..
        /// </summary>
        internal static string BlobFileSizeTooLargeException {
            get {
                return ResourceManager.GetString("BlobFileSizeTooLargeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The blob transfer has been cancelled..
        /// </summary>
        internal static string BlobTransferCancelledException {
            get {
                return ResourceManager.GetString("BlobTransferCancelledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BlockBlob.
        /// </summary>
        internal static string BlockBlob {
            get {
                return ResourceManager.GetString("BlockBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BlockSize must be between {0} and {1}..
        /// </summary>
        internal static string BlockSizeOutOfRangeException {
            get {
                return ResourceManager.GetString("BlockSizeOutOfRangeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passed in buffer was not allocated through the MemoryManager..
        /// </summary>
        internal static string BufferNotAllocatedThroughMemoryManagerException {
            get {
                return ResourceManager.GetString("BufferNotAllocatedThroughMemoryManagerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot move source unless monitoring is available..
        /// </summary>
        internal static string CannotMoveSourceIfMonitoringIsTurnedOffException {
            get {
                return ResourceManager.GetString("CannotMoveSourceIfMonitoringIsTurnedOffException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot move source unless source blob is not null..
        /// </summary>
        internal static string CannotMoveSourceIfSourceBlobIsNullException {
            get {
                return ResourceManager.GetString("CannotMoveSourceIfSourceBlobIsNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot overwrite an existing BlockBlob with a PageBlob..
        /// </summary>
        internal static string CannotOverwriteBlockBlobWithPageBlobException {
            get {
                return ResourceManager.GetString("CannotOverwriteBlockBlobWithPageBlobException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot overwrite an existing PageBlob with a BlockBlob..
        /// </summary>
        internal static string CannotOverwritePageBlobWithBlockBlobException {
            get {
                return ResourceManager.GetString("CannotOverwritePageBlobWithBlockBlobException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse account name from {0}..
        /// </summary>
        internal static string CannotParseAccountFromUriException {
            get {
                return ResourceManager.GetString("CannotParseAccountFromUriException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove source file without file name..
        /// </summary>
        internal static string CannotRemoveSourceWithoutSourceFileException {
            get {
                return ResourceManager.GetString("CannotRemoveSourceWithoutSourceFileException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one of ({0}) or ({1}) can be set..
        /// </summary>
        internal static string CanOnlySetOneCredentialException {
            get {
                return ResourceManager.GetString("CanOnlySetOneCredentialException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concurrent thread count must be positive..
        /// </summary>
        internal static string ConcurrentCountNotPositiveException {
            get {
                return ResourceManager.GetString("ConcurrentCountNotPositiveException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The container {0} can only be used as source location..
        /// </summary>
        internal static string ContainerOnlyValidForSourceException {
            get {
                return ResourceManager.GetString("ContainerOnlyValidForSourceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred in a callback..
        /// </summary>
        internal static string DataMovement_ExceptionFromCallback {
            get {
                return ResourceManager.GetString("DataMovement_ExceptionFromCallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MD5 hash calculated from the downloaded data does not match the MD5 hash stored in the blob&apos;s property. Please refer to help or documentation for detail.
        ///MD5 calculated: {0}
        ///MD5 in property: {1}.
        /// </summary>
        internal static string DownloadedMd5MismatchException {
            get {
                return ResourceManager.GetString("DownloadedMd5MismatchException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to allocate required memory..
        /// </summary>
        internal static string FailedToAllocateMemoryException {
            get {
                return ResourceManager.GetString("FailedToAllocateMemoryException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy from &quot;{0}&quot; to &quot;{1}&quot;. Copy status: {2}..
        /// </summary>
        internal static string FailedToCopyBlobException {
            get {
                return ResourceManager.GetString("FailedToCopyBlobException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the original BlobType..
        /// </summary>
        internal static string FailedToGetBlobTypeException {
            get {
                return ResourceManager.GetString("FailedToGetBlobTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get last write time of source file..
        /// </summary>
        internal static string FailedToGetSourceLastWriteTime {
            get {
                return ResourceManager.GetString("FailedToGetSourceLastWriteTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open file {0}..
        /// </summary>
        internal static string FailedToOpenFileException {
            get {
                return ResourceManager.GetString("FailedToOpenFileException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve CopyState for blob &quot;{0}&quot;..
        /// </summary>
        internal static string FailedToRetrieveCopyStateForBlobToMonitorException {
            get {
                return ResourceManager.GetString("FailedToRetrieveCopyStateForBlobToMonitorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The initial entry status {0} is invalid for {1}..
        /// </summary>
        internal static string InvalidInitialEntryStatusForControllerException {
            get {
                return ResourceManager.GetString("InvalidInitialEntryStatusForControllerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The initial entry status {0} is invalid when MoveSource is off..
        /// </summary>
        internal static string InvalidInitialEntryStatusWhenMoveSourceIsOffException {
            get {
                return ResourceManager.GetString("InvalidInitialEntryStatusWhenMoveSourceIsOffException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Source and Destination are locally accessible locations. At least one of source and destination should be an Azure Storage location..
        /// </summary>
        internal static string LocalToLocalTransferUnsupportedException {
            get {
                return ResourceManager.GetString("LocalToLocalTransferUnsupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local copy id is different from the one returned from the server..
        /// </summary>
        internal static string MismatchFoundBetweenLocalAndServerCopyIdsException {
            get {
                return ResourceManager.GetString("MismatchFoundBetweenLocalAndServerCopyIdsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only BlockBlob and PageBlob types are supported..
        /// </summary>
        internal static string OnlySupportTwoBlobTypesException {
            get {
                return ResourceManager.GetString("OnlySupportTwoBlobTypesException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target already exists. User chose not to overwrite it and canceled the transfer..
        /// </summary>
        internal static string OverwriteCallbackCancelTransferException {
            get {
                return ResourceManager.GetString("OverwriteCallbackCancelTransferException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PageBlob.
        /// </summary>
        internal static string PageBlob {
            get {
                return ResourceManager.GetString("PageBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both {0} and {1} are provided. At most one of these parameters could be provided..
        /// </summary>
        internal static string ProvideAtMostOneParameterBothProvidedException {
            get {
                return ResourceManager.GetString("ProvideAtMostOneParameterBothProvidedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both {0} and {1} are null. Exactly one of these parameters must be provided..
        /// </summary>
        internal static string ProvideExactlyOneParameterBothNullException {
            get {
                return ResourceManager.GetString("ProvideExactlyOneParameterBothNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both {0} and {1} are provided. Exactly one of these parameters must be provided..
        /// </summary>
        internal static string ProvideExactlyOneParameterBothProvidedException {
            get {
                return ResourceManager.GetString("ProvideExactlyOneParameterBothProvidedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##} bytes.
        /// </summary>
        internal static string ReadableSizeFormatBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}EB.
        /// </summary>
        internal static string ReadableSizeFormatExaBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatExaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}GB.
        /// </summary>
        internal static string ReadableSizeFormatGigaBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatGigaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}KB.
        /// </summary>
        internal static string ReadableSizeFormatKiloBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatKiloBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}MB.
        /// </summary>
        internal static string ReadableSizeFormatMegaBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatMegaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}PB.
        /// </summary>
        internal static string ReadableSizeFormatPetaBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatPetaBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:0.##}TB.
        /// </summary>
        internal static string ReadableSizeFormatTeraBytes {
            get {
                return ResourceManager.GetString("ReadableSizeFormatTeraBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read restartable info from file..
        /// </summary>
        internal static string RestartableInfoCorruptedException {
            get {
                return ResourceManager.GetString("RestartableInfoCorruptedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaximumCacheSize cannot be less than {0}..
        /// </summary>
        internal static string SmallMemoryCacheSizeLimitationException {
            get {
                return ResourceManager.GetString("SmallMemoryCacheSizeLimitationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and destination cannot be the same..
        /// </summary>
        internal static string SourceAndDestinationLocationCannotBeEqualException {
            get {
                return ResourceManager.GetString("SourceAndDestinationLocationCannotBeEqualException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source blob does not exist..
        /// </summary>
        internal static string SourceBlobDoesNotExistException {
            get {
                return ResourceManager.GetString("SourceBlobDoesNotExistException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file has been changed since the last transfer..
        /// </summary>
        internal static string SourceFileHasBeenChangedException {
            get {
                return ResourceManager.GetString("SourceFileHasBeenChangedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied storage key ({0}) is not a valid Base64 string..
        /// </summary>
        internal static string StorageKeyInvalidFormatException {
            get {
                return ResourceManager.GetString("StorageKeyInvalidFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must support Read..
        /// </summary>
        internal static string StreamMustSupportReadException {
            get {
                return ResourceManager.GetString("StreamMustSupportReadException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must support Seek..
        /// </summary>
        internal static string StreamMustSupportSeekException {
            get {
                return ResourceManager.GetString("StreamMustSupportSeekException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must support Write..
        /// </summary>
        internal static string StreamMustSupportWriteException {
            get {
                return ResourceManager.GetString("StreamMustSupportWriteException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure default container does not support subfolders..
        /// </summary>
        internal static string SubfoldersNotAllowedUnderRootContainerException {
            get {
                return ResourceManager.GetString("SubfoldersNotAllowedUnderRootContainerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TransferEntry.CopyId cannot be null or empty because we need it to verify we are monitoring the right blob copying process..
        /// </summary>
        internal static string TransferEntryCopyIdCannotBeNullOrEmptyException {
            get {
                return ResourceManager.GetString("TransferEntryCopyIdCannotBeNullOrEmptyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property {0} of a transfer entry can be set only once..
        /// </summary>
        internal static string TransferEntryPropertyCanBeSetOnlyOnceException {
            get {
                return ResourceManager.GetString("TransferEntryPropertyCanBeSetOnlyOnceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given blob type {0} is undefined..
        /// </summary>
        internal static string UndefinedBlobTypeException {
            get {
                return ResourceManager.GetString("UndefinedBlobTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given entry status {0} is undefined..
        /// </summary>
        internal static string UndefinedTransferEntryStatusException {
            get {
                return ResourceManager.GetString("UndefinedTransferEntryStatusException", resourceCulture);
            }
        }
    }
}
